// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>

#define def_L 0
#define col_L 1
#define num_L 2
#define sym_L 3
#define fun_L 4

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
	&kp Q			&kp W		&kp E		&kp R		&kp T												&kp Y			&kp U			&kp I			&kp O		&kp P
	&kp A			&kp S		&kp D		&kp F		&kp G												&kp H			&kp J			&kp K			&kp L		&kp SEMI
	&kp Z			&kp X		&kp C		&kp V		&kp B												&kp N			&kp M			&kp COMMA		&kp DOT		&kp FSLH
	&kp C_MUTE		&kp LWIN	&kp LCTRL	&kp SPACE	&lt num_L TAB	&lt fun_L ESC			&mo fun_L	&lt sym_L RET	&mt LSHIFT BSPC	&mt LALT DEL	&kp RWIN	&kp LA(F4)
			>;

			// sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp TAB LS(TAB)>;
		};

		colemak_layer {
			bindings = <
	&kp Q			&kp W		&kp F		&kp P		&kp B												&kp J			&kp L			&kp U			&kp Y		&kp SEMI
	&kp A			&kp R		&kp S		&kp T		&kp G												&kp M			&kp N			&kp E			&kp I		&kp O
	&kp Z			&kp X		&kp C		&kp D		&kp V												&kp K			&kp H			&kp COMMA		&kp DOT		&kp FSLH
	&kp C_MUTE		&kp LWIN	&kp LCTRL	&kp SPACE	&lt num_L TAB	&lt fun_L ESC			&mo fun_L	&lt sym_L RET	&mt LSHIFT BSPC	&mt LALT DEL	&kp RWIN	&kp LA(F4)
			>;

			// sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp TAB LS(TAB)>;
		};

		num_layer {
			bindings = <
	&kp TAB			&kp N7		&kp N8		&kp N9		&kp LG(TAB)											&trans			&kp GRAVE		&kp LT			&kp GT		&kp P
	&mt LSHIFT RET	&kp N4		&kp N5		&kp N6		&kp LA(TAB)											&trans			&kp EQUAL		&kp PLUS		&kp MINUS	&kp SEMI
	&kp N0			&kp N1		&kp N2		&kp N3		&kp LC(TAB)											&trans			&kp TILDE		&kp STAR		&kp CARET	&kp BSLH
	&kp C_MUTE		&kp LWIN	&kp LCTRL	&kp SPACE	&lt num_L TAB	&lt fun_L ESC			&mo fun_L	&lt sym_L RET	&mt LSHIFT BSPC	&mt LALT DEL	&kp RWIN	&kp LA(F4)
			>;

			// sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp TAB LS(TAB)>;
		};

		sym_layer {
			bindings = <
	&kp DLLR		&kp LBKT	&kp RBKT	&kp AMPS	&trans												&trans			&kp HOME		&kp K_MENU		&kp END			&kp PG_UP
	&mt LSHIFT AT	&kp LPAR	&kp RPAR	&kp PIPE	&trans												&tog col_L		&kp LEFT		&kp UP			&kp RIGHT		&mt LALT PG_DN
	&kp HASH		&kp LBRC	&kp RBRC	&kp UNDER	&trans												&trans			&kp PSCRN		&kp DOWN		&kp PAUSE_BREAK	&kp SLCK
	&kp C_MUTE		&kp LWIN	&kp LCTRL	&kp SPACE	&lt num_L TAB	&lt fun_L ESC			&mo fun_L	&lt sym_L RET	&mt LSHIFT BSPC	&mt LALT DEL	&kp RWIN		&kp LA(F4)
			>;

			// sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp TAB LS(TAB)>;
		};

		fun_layer {
			bindings = <
	&kp C_NEXT		&kp F7			&kp F8		&kp F9		&kp F10											&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&bt BT_CLR
	&mt LALT C_PP	&kp F4			&kp F5		&kp F6		&kp F11											&rgb_ug RGB_EFF	&rgb_ug RGB_SPD &rgb_ug RGB_SPI	&rgb_ug RGB_HUD	&rgb_ug RGB_HUI
	&kp C_PREV		&kp F1			&kp F2		&kp F3		&kp F12											&rgb_ug RGB_TOG	&rgb_ug RGB_BRD	&rgb_ug RGB_BRI	&rgb_ug RGB_SAD	&rgb_ug RGB_SAI
	&kp C_MUTE		&rgb_ug RGB_TOG	&bootloader	&reset		&lt num_L TAB	&mo fun_L			&mo fun_L	&lt sym_L RET	&reset			&bootloader		&kp RWIN		&kp LA(F4)
			>;

			// sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp TAB LS(TAB)>;
		};	
	};
};